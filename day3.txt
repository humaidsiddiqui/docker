DOCKER VOLUMES:
If One Container contains data and if it gets deleted, the whole data will be deleted
because of this reason docker volumes comes into picture
the container data needs to be bind with host data (-v docker volumes) 
docker volume create mysql (this will create the volume and this need to be included in the previous command)

docker run -d --name mysql --network two-tier -v var/lib/mysql-e MYSQL_ROOT_PASSWORD:root -e MYSQL_DATABASE=devops mysql

DOCKER COMPOSE
this help in automating the work by using YAML (YET ANOTHER MARKUP LANGUAGE)
LET'S MAKE THE YAML FILE FOR AUTOMATION FROM SCRATCH:

version: "3.8"

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: devops
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./message.sql:/docker-entrypoint-initdb.d/message.sql  
    networks:
      - twotier
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  flask-app:
    build:
      context: .
    container_name: flask-app
    ports:
      - "5000:5000"
    environment:
      MYSQL_HOST: mysql
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_DB: devops
    depends_on:
      - mysql
    networks:
      - twotier
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  twotier:

installing docker compose 
sudo apt-get install docker-compose-v2
running the docker compose file
docker compose up 

docker system prune will delete all the local conatiner which are not being used

DOCKER REGISTRY:
If you want to push the images to the repository or hub you need to tag and then needed to push
docker image tag two-tier-flask-app:latest humaidsiddiqui/two-tier-backend:latest (You need to assign new name and icnlude your docker username to push to docker hub)
